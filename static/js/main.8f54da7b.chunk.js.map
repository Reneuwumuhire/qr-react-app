{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","props","state","delay","result","handleScan","bind","this","setState","console","log","alert","err","error","style","height","width","onError","handleError","onScan","facingMode","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,IACPC,OAAQ,aAGV,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAPD,E,8CASnB,SAAWF,GACLA,IACFG,KAAKC,SAAS,CAAEJ,WAChBK,QAAQC,IAAIN,GACZO,MAAMP,M,yBAGV,SAAYQ,GACVH,QAAQI,MAAMD,K,oBAEhB,WAME,OACE,gCACE,cAAC,IAAD,CACET,MAAOI,KAAKL,MAAMC,MAClBW,MATe,CACnBC,OAAQ,IACRC,MAAO,KAQHC,QAASV,KAAKW,YACdC,OAAQZ,KAAKF,WACbe,WAAY,gBAGd,4BAAIb,KAAKL,MAAME,gB,GApCUiB,aCSlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8f54da7b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      delay: 500,\n      result: 'No result',\n    }\n\n    this.handleScan = this.handleScan.bind(this)\n  }\n  handleScan(result) {\n    if (result) {\n      this.setState({ result })\n      console.log(result)\n      alert(result);\n    }\n  }\n  handleError(err) {\n    console.error(err)\n  }\n  render() {\n    const previewStyle = {\n      height: 240,\n      width: 320,\n    }\n\n    return (\n      <div>\n        <QrReader\n          delay={this.state.delay}\n          style={previewStyle}\n          onError={this.handleError}\n          onScan={this.handleScan}\n          facingMode={\"environment\"}\n\n        />\n        <p>{this.state.result}</p>\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}